<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lhiot.dc.mapper.ProductMapper">
    <!-- 数据库字段对象关系映射 -->
    <resultMap id="baseResultMap" type="com.lhiot.dc.entity.Product">
        <id column="id" property="id"/>
        <result column="product_code" property="code"/>
        <result column="product_name" property="name"/>
        <result column="category_id" property="categoryId"/>
        <result column="source_code" property="sourceCode"/>
        <result column="benefit" property="benefit"/>
        <result column="description" property="description"/>
        <result column="create_at" property="createAt"/>
        <collection property="attachments" ofType="com.lhiot.dc.entity.ProductAttachment">
            <id column="aid" property="id"/>
            <result column="url" property="url"/>
            <result column="product_id" property="productId"/>
            <result column="sorting" property="sorting"/>
            <result column="attachment_type" property="attachmentType"/>
        </collection>
    </resultMap>


    <!-- base查询字段  -->
    <sql id="columns">
        <trim suffixOverrides=",">
            p.id,
            p.product_code,
            p.product_name,
            p.category_id,
            p.source_code,
            p.benefit,
            p.description,
            p.create_at,
            pa.id aid,
            pa.url,
            pa.product_id,
            pa.sorting,
            pa.attachment_type,
        </trim>
    </sql>

    <!-- 新增商品 -->
    <insert id="insert" parameterType="com.lhiot.dc.entity.Product" useGeneratedKeys="true" keyColumn="id"
            keyProperty="id">
        insert into product
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="code != null ">
                product_code,
            </if>
            <if test="name != null ">
                product_name,
            </if>
            <if test="categoryId != null ">
                category_id,
            </if>
            <if test="sourceCode != null ">
                source_code,
            </if>
            <if test="benefit != null ">
                benefit,
            </if>
            <if test="description != null ">
                description,
            </if>
            <if test="createAt != null ">
                create_at,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="code != null ">
                #{code},
            </if>
            <if test="name != null ">
                #{name},
            </if>
            <if test="categoryId != null ">
                #{categoryId},
            </if>
            <if test="sourceCode != null ">
                #{sourceCode},
            </if>
            <if test="benefit != null ">
                #{benefit},
            </if>
            <if test="description != null ">
                #{description},
            </if>
            <if test="createAt != null ">
                #{createAt},
            </if>
        </trim>
    </insert>

    <!-- 修改商品 -->
    <update id="updateById" parameterType="com.lhiot.dc.entity.Product">
        update product
        <trim prefix="set" suffixOverrides=",">
            <if test="code != null and code != ''">product_code = #{code},</if>
            <if test="name != null and name != ''">product_name = #{name},</if>
            <if test="categoryId != null">category_id = #{categoryId},</if>
            <if test="sourceCode != null and sourceCode != ''">source_code = #{sourceCode},</if>
            <if test="benefit != null and benefit != ''">benefit = #{benefit},</if>
            <if test="description != null and description != ''">description = #{description},</if>
        </trim>
        where id = #{id}
    </update>

    <!-- 根据ID查找单个商品 -->
    <select id="findById" parameterType="Long" resultMap="baseResultMap">
        select
        <include refid="columns"/>
        from product p
        left join product_attachment pa on p.id=pa.product_id
        where p.id = #{0}
    </select>


    <!-- 根据code查找单个商品 -->
    <select id="findByCode" parameterType="String" resultMap="baseResultMap">
        select
        <include refid="columns"/>
        from product p
        left join product_attachment pa on p.id=pa.product_id
        where p.product_code = #{0}
    </select>


    <!-- 批量删除商品集合 -->
    <delete id="deleteByIds" parameterType="String">
        delete from product where id in
        <foreach item="item" index="index" collection="ids.split(',')" open="(" separator="," close=")">
            ${item}
        </foreach>
    </delete>


    <!-- filter查询条件  -->
    <sql id="filter">
        <trim prefix="where" prefixOverrides="and|or">
            <if test="code != null and code != ''">and product_code = #{code}</if>
            <if test="name != null and name != ''">and product_name like concat('%',#{name},'%')</if>
            <if test="categoryId != null">and category_id = #{categoryId}</if>
            <if test="sourceCode != null and sourceCode != ''">and source_code = #{sourceCode}</if>
        </trim>
    </sql>

    <!--查询商品集合-->
    <select id="findList" parameterType="com.lhiot.dc.model.ProductParam" resultMap="baseResultMap">
        select
        <include refid="columns"/>
        from product p
        left join product_attachment pa on p.id=pa.product_id
        inner join (
        select id from product
        <include refid="filter"/>
        <if test="rows != null and rows > 0 ">
            order by id desc
            limit #{startRow} , #{rows}
        </if>
        ) pw on p.id=pw.id
        order by p.id desc
    </select>


    <!--查询商品集合总数-->
    <select id="findCount" parameterType="com.lhiot.dc.model.ProductParam" resultType="int">
        select count(1)
        from product
        <include refid="filter"/>
    </select>


</mapper>